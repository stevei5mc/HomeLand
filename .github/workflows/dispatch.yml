name: dispatch
on:
  workflow_dispatch:
    inputs:
      build-plugin:
        description: 'Build plugin'
        required: false
        type: boolean
      build-Docusaurus:
        description: 'Build docusaurus'
        required: false
        type: boolean
      deploy-gitHub-pages:
        description: 'Deploy gitHub pages'
        required: false
        type: boolean
      PR_Approve:
        description: 'PR Approve'
        required: false
        type: boolean
      PR_ID:
        description: 需要批准的PR ID
        required: false

jobs:
  initialize:
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ steps.get_info.outputs.repo_name }}
      artifact_name: ${{ steps.get_info.outputs.repository_name }}-Dispatch-Build_${{ github.run_number}}
    steps:
    - name: 获取信息
      id: get_info
      run: echo "repository_name=${GITHUB_REPOSITORY/${{ github.repository_owner }}\//}" >> $GITHUB_OUTPUT
    - name: 获取输入参数
      run: |
        echo Build plugin : ${{ inputs.build-plugin }}
        echo Build docusaurus : ${{ inputs.build-Docusaurus }}
        echo Deploy gitHub pages : ${{ inputs.deploy-gitHub-pages }}
        echo PR Approve : ${{ inputs.PR_Approve }}
        echo PR Approve ID : ${{ inputs.PR_ID }}

  build-plugin:
    if: ${{ inputs.build-plugin }}
    name: Build plugin
    needs: initialize
    runs-on: ubuntu-latest
    steps:
    - name: 拉取代码
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: 安装java8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        # cache: maven
    # - name: 构建
    #   run: |
    #     mvn -B package --file pom.xml
    #     mkdir staging
    #     cp target/*.jar staging
    # - name: 上传构建
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: ${{ needs.initialize.outputs.artifact_name }}
    #     path: staging

  build-Docusaurus:
    if: ${{ inputs.build-Docusaurus }}
    name: Build docusaurus
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          # cache: npm
      # - name: 构建
      #     cd Docusaurus
      #     npm ci
      #     npm run build
      #     cd ../
      #     mkdir build
      #     cp -r ./Docusaurus/build/* build
      # - name: 上传构建
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: build

  # 部署github pages和批准PR的工作流无法一起运行，只能二选一来运行
  deploy-gitHub-pages:
    if: ${{ inputs.deploy-gitHub-pages  == 'true' && inputs.PR_Approve  == 'false' }}
    name: Deploy gitHub pages
    needs: build-Docusaurus
    # 给予 GITHUB_TOKEN 进行 Pages 部署所必须的权限
    permissions:
      pages: write # 以部署到 Pages
      id-token: write # 以验证部署来自恰当的源
    # 部署到 Github Pages 环境
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # - name: 部署到 GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v4
      - run: pwd

  # 部署github pages和批准PR的工作流无法一起运行，只能二选一来运行
  PR_Approve:
    if: ${{ inputs.deploy-gitHub-pages == 'false' && inputs.PR_Approve  == 'true'}}
    name: PR Approve
    needs: 
    - build-Docusaurus
    - build-plugin
    # 给予 GITHUB_TOKEN 进行 Pages 部署所必须的权限
    permissions:
      pages: write # 以部署到 Pages
      id-token: write # 以验证部署来自恰当的源
    # 部署到 Github Pages 环境
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
          submodules: true
      # - name: 批准PR
      #   uses: hmarr/auto-approve-action@v4.0.0
      #   with:
      #     pull-request-number: ${{ inputs.PR_ID }}
      #     review-message: |
      #       编译已通过，批准通过
      #       如果有新的提交则取消本次批准